name: ALDI Price Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  scrape-aldi:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | sed 's/Google Chrome //' | cut -d'.' -f1)
        
        if [ "$CHROME_VERSION" -ge "115" ]; then
          LATEST_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE")
          wget -O /tmp/chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/$LATEST_VERSION/linux64/chromedriver-linux64.zip"
          sudo unzip /tmp/chromedriver.zip -d /tmp/
          sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        else
          DRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
          wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip"
          sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
        fi
        
        sudo chmod +x /usr/local/bin/chromedriver
    
    - name: Install dependencies
      run: |
        cd WebScrape
        pip install -r requirements.txt
    
    - name: Enable headless mode for ALDI scraper
      run: |
        cd WebScrape
        sed -i 's/# options.add_argument('\''--headless'\'')/options.add_argument('\''--headless'\'')/' aldi.py
        sed -i '/options.add_argument('\''--headless'\'')/a options.add_argument('\''--no-sandbox'\'')' aldi.py
        sed -i '/options.add_argument('\''--no-sandbox'\'')/a options.add_argument('\''--disable-dev-shm-usage'\'')' aldi.py
    
    - name: Create public directory
      run: mkdir -p app/public
    
    - name: Run ALDI scraper
      run: |
        cd WebScrape
        python aldi.py
    
    - name: Check if CSV was created
      run: |
        if [ -f "app/public/aldi.csv" ]; then
          echo "✅ ALDI CSV created successfully"
          echo "Products scraped: $(( $(wc -l < app/public/aldi.csv) - 1 ))"
        else
          echo "❌ ALDI CSV not found"
          exit 1
        fi
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add app/public/aldi.csv
        
        if ! git diff --staged --quiet; then
          git commit -m "Update ALDI prices - $(date -u '+%Y-%m-%d %H:%M UTC')"
          git push
          echo "✅ Changes committed and pushed"
        else
          echo "ℹ️ No changes to commit"
        fi